-----------------------------------------------------------
CHAPTER 17 - SECURITY
-----------------------------------------------------------

- Introduction

    - Linux is a very secure OS.  It provides a secure environment in which to work on and
        store files.  However, good security can be a bit obtrusive.


    - Security must not be an afterthought.  It must be an integral component of everything
        we do as SysAdmins.  The security of our systems should be a major consideration,
        if not the prime consideration, in everything we do.



- Security By Obscurity

    - We may assume that it isn't worth a hacker's time to attack or home or small office
        network.  However, we cannot actually count on 'security by obscurity' to protect
        our computers.  


    - Many small businesses are subjected to attempts to hack into their firewall servers
        hundreds of times per day.  Every computer connected to any network, especially the
        internet, is a target.



- Data Protection

    - There are 3 major considerations to data protection, and each has different tools and 
        strategies.

        1. We want to protect against data loss.

        2. We want to protect our data from unauthorized access.

        3. We want to ensure our data is safe from unauthorized changes or corruption,
             perhaps by malware or a disgruntled employee.  And, we want to protect against
             ransomware that would encrypt our data.



- Security Vectors

    - Self-Inflicted Problems

        - The most common form is semi-intentional erasure of important files or directories.
            We should obviously pay attention when deleting files, but we will still end up
            deleting data we may need later.


        - This category also includes things like:

            - poor passwords
            - leaving a USB with critical information in a public place
            - leaving a laptop unattended in a public place
            - using unencrypted wireless links


    - Environmental Problems

        - Power failures can occur for many reasons.  When they happen, there is a danger of
            losing data, especially from documents that have not been saved.  Modern hard
            drives and filesystems minimize the probability of data loss, but it still happens.


        - The lack of proper grounding can be a serious issue.


        - EMI (Electromagnetic Interference) can interfere with the operation of any electronic
            device.  Lightning, static electricity, microwaves, old CRTs, radar systems, and
            radio frequency bursts can cause problems.  Proper grounding can help.


        - Hard drive failures cause data loss.  Older mechanical hard drives have a much higher
            failure rate.  Modern hard drives have SMART technology that predicts failures 
            before they happen.


        - We should always use Uninterruptable Power Supplies and ensure they are plugged into
            properly grounded outlets.  


    - Physical Attacks

        - Disgruntled employees can maliciously destroy data.


        - Common theft can occur, like if your laptop gets stolen from your house.


        - Natural disaster can destroy both computers and backups.  


        - We should back up everything frequently, and the most recent backups should always be 
            kept offsite.  For instance, we can store backups in a safe deposit box.  


    - Network Attacks

        - Scripted attacks, usually simple brute force remote login attempts, are very common.
            These attacks are useless against today's well-protected Linux hosts, which are
            well-hardened at installlation and do not have SSH servers up and running.  They
            are typically dictionary attacks against large ranges of hosts.


        - Malware can be used for various malicious purposes, including destroying or deleting
            your data.


        - Ramsomeware is a specific form of malware that encrypts your data and holds it for
            ransome.


        - Drive-by malware is a malicious link in an apparently harmless ad on a legitimate web
            page.  The link doesn't have to be clicked for your computer to be affected.


        - Targeted login attacks are aimed directly at your organization.  They are carried out
            by someone with some reason to target you.


        - We should always keep systems up to date with the latest security patches.  We should
            ensure that good firewalls are in place and properly configured.  And we should
            check frequently for evidence of break-ins.


    - Software Vulnerabilities

        - Many attacks on connected computers are aided and abetted by vulnerabilities in the
            host's software.  



- Linux and Security

    - Linux in general, and Fedora with SELinux set to enforcing particularly, is very secure.
        Linux is secure immediately upon installation.  


    - There are only a couple minor services running that do not need to run, but none provide
        external access from the internet.  The remaining ones can easily be turned off.
        Unneeded services can be a vector for attack.


    - Fedora has an excellent firewall in place, and the one service I use in all of my Linux
        hosts, the SSHD server, is configured for outbound connections only.



- Login Security

    - Login security is your first line of defense.  Generating and using secure passwords is
        the main tool we have to provide this security, whether a local or remote login.



- Checking Logins

    - Another tool we have is the list of user logins attempts.  The 'last' command displays all
        successful logins.  The 'lastb' command displays a list of failed logins.  

        # Display list of successful logins
        $ last | less

        # Display list of unsuccessful logins
        $ lastb | less


    - The 'journalctl --list-boots' command will display all boots, which can be useful in forensic
        investigations.



- Telnet

    - Telnet is an old and well-known terminal emulator that provided a very easy way to connect
        to remote hosts.  It was developed before the internet was in wide use.  


    - All communications between hosts was in plain text ASCII with no encryption, including the
        username and password.  As the internet grew, this became a problem.  

      Looking at the protocol can provide insight in how easy it is to eavesdrop on an unencrypted
        connection.  


    - The 'tcpdump' tool is used to explore TCP packets and their contents.  

        # Get ip address of our virtual router
        $ ip route
        ... default via 10.0.2.1

        # In another terminal session as root, start tcpdump
        $ tcpdump -i enp0s3

        # Ping our virtual router to generate some packets, will see packet headers in tcpdump
        $ ping 10.0.2.1


    - Now, we can install telnet and xinetd.  xinetd is used to manage a number of older server
        types, including telnet.  

        # Install telnet and xinetd
        $ dnf -y install telnet-server xinetd


        # Add new file /etc/xinetd.d/telnet for config
        service telnet
        {
                 flags           = REUSE
                 socket_type     = stream
                 wait            = no
                 user            = root
                 server          = /usr/sbin/in.telnetd
                 log_on_failure  += USERID
                 disable         = no
        }


    - Now, we need to allow Telnet through our firewall on port 23.  If we don't remember the
        correct port number, we can get it in /etc/services.

        # Get telnet port number
        $ grep -i telnet /etc/services

        # Add firewall exception
        $ firewall-cmd --permanent --add-port=23/tcp

        # Reload firewall rules
        $ firewall-cmd --reload

        # Verify port has been opened
        $ firewall-cmd --list-ports

        # Verify that xinetd service is up and running
        $ systemctl status xinetd
        $ systemctl start xinetd


    - Now, we can use telnet:

        # Start tcpdump (-A option dumps entire packet bodies in ASCII)
        $ tcpdump -i lo port 23 -A

        # Create virtual terminal into localhost
        $ telnet localhost

      We can see all the data in the packets.



- SSH

    - The SSH Server


- Firewalls

    - firewalld
    - Understanding the Rules
    - Deleting and Adding Rules


- IPTables

    - Converting to IPTables
    - Understanding the Rule Set
    - Managing Rules with IPTables


- Fail2Ban


- PAM (Pluggable Authentication Modules)



- Basic Steps to Harden a System

    1. Limit physical access to prevent unauthorized people from inserting malware via a USB drive.

    2. Use strong passwords and enforce this rule.

    3. Change passwords frequently.  Password aging can be used to enforce this.

    4. Do not share user accounts.  If multiple users need a shared document, create a group.

    5. Delete old user accounts when they are no longer needed.

    6. Strong firewalls are an important part of any security regimen.

    7. Use public/private key pairs with SSH.

    8. Do not store sensitive data on computers that are firewalls or routers that are directly
         accessible to the internet.

    9. In larger organizations data should not be stored on any host in the DMZ.

    10. Intrusion detection can be used to detect when an intrusion has occurred.

    11. Verify open ports with tools like nmap.  There should be no unexpected or unnecessary open ports.

    12. Use a BIOS password to prevent changes during the hardware boot sequence.

    13. Use a GRUB password to prevent changes to Linux initialization and startup.

    14. Turn off or remove unused services to prevent attacks against any possible vulnerabilities.

    15. Use firewalls to limit inbound and outbound traffic to be only what would be expected on a given
          host.

    16. Use SELinux to prevent hackers from making changes even if they do gain access to a host.

    17. Use intrusion detection software like Tripwire to report altered files and other signs of a
          successful or attempted intrusion.

    18. Disable ZEROCONF, which is a network self-configuration program when static configuration has 
          not been performed and DHCP is not available.  This service is sometimes known as 'avahi'.

    19. Sync all system times using NTP to make it easier to compare log files.

    20. Only allow root to run cron jobs.

    21. Enable only the ssh2 protocol, which is the default in Red Hat-based distros like Fedora.

    22. Do now allow root logins, especially remote ones.  Log in as a non-user and then su to root.

    23. Real SysAdmins don't use sudo.  

    24. If a non-root user really does need access to a command that requires root privilege, configure
          sudo for that one user to use that one command.

    25. Back up everything - frequently.