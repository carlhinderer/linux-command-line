-----------------------------------------------------------
CHAPTER 7 - PRINTING
-----------------------------------------------------------

- About Printers

    - Printers build up an image of a page to be printed one line at a time.  Each line is as
        wide as the vertical size of the print head.  


    - Old dot matrix printers printed one line of text at a time.  Modern printers print images, 
        even if the image is only text.  Ink jet printers print the image one line at a time
        directly onto the paper.  Laser printers generate an entire image onto a drum inside the
        printer, then transfer the entire image onto the page at one time.



- Print Languages

    - To create images to be printed, software must generate a data stream that can be 
        interpreted and converted to an image for printing.  The data streams are created using
        one of the common PDLs (page description language).

      These PDLs describe the the appearance of the page when it is printed.  They use commands
        like 'Draw a box at this location with this width and height' or 'Center some text using
        this font'.


    - There are many PDLs, but there are only 3 in common use by today's printers:

        1. PCL
             HP's Printer Control Language

        2. Postscript
             Adobe Systems' first PDL

        3. PDF
             Adobe Systems' Portable Document Format



- Printers and Linux

    - The 'Open Printing Database' maintains a list of printers that are compatible with Linux.
        Brother, HP, and Xerox printers are pretty reliably compatible.


    - Most printers are recognized automatically when plugged into a USB port, but they are not
        necessarily automatically configured.

      To see a list of printers configured for our VirtualBox VM, navigate to 
        > Devices > USB



- CUPS

    - CUPS (Common Unix Printing System) was developed in the late 1990s.  It is a modular
        printing system that makes configuring and printing with most modern printers easy
        and painless.


    - CUPS uses PostScript as the final printer data stream.  It accepts input in ASCII text,
        PDF, HP/GL, and raster image formats, then runs them through a filter to transform
        them into PostScript.

      The PostScript is then passed to a software layer that converts the data to a rasterized
        format that can be converted by various drivers to printer-specific language formats.

      The data stream is then passed to the back-end filters that transfer printer commands to
        printers or other printing devices.


    - CUPS uses PDD (PostScript Printer Description) files to define the features available 
        in each supported printer.  This allows CUPS to interact with features such as paper
        trays, different paper sizes, different print qualities, duplex, color/B&W, and more.



- Creating the Print Queue

    - A 'print queue' is a directory that is used to store the print job data stream while
        it is being spooled to the printer.  Although modern-day printers have internal
        memory, large jobs can easily overfill it.

      In a high-volume print environment, many jobs may be queued up faster than the printer
        can print them so that they remain in the queue until the printer is ready for them.


    - In general, the /var/spool directory contains data that is temporarily stored for later
        processing. 

      CUPS has a queue in /var/spool/cups which contains data about the print jobs as well 
        as the data for the jobs themselves.

      The /var/spool/lpd directory contains a subdirectory for each printer which is used only
        to store lock files to prevent multiple overlapping attempts to access each printer.


    - To create the print queue:

        # Find USB printer device
        $ lsusb


        # Printer commands start with 'lp' (Line Printer in the old days)
        # List all available buses, protocols, and printers attached to each
        $ lpinfo -v

        network https
        network ipp
        network http
        network ipps
        network beh
        direct usb://Brother/HL-2270DW%20series?serial=C1J695917
        network socket
        network lpd
        network smb

        # We also need to find the PPD file for this printer
        $ lpinfo -m | less


        # Now, we'll add the new print queue
        #   -p  Printer name
        #   -E  Enables the printer to accept jobs
        #   -v  Printer URI
        #   -m  PDD file
        $ lpadmin -p Brother-HL-2270DW -E \
          -v usb://Brother/HL-2270DW%20series?serial=C1J695917 \
          -m gutenprint.5.2://brother-hl-2250dn/simple

        # Verify that the print queue was created
        $ lpstat -t


    - To test the printer:

        # List the name of all print queues
        $ lpstat -er

        # Send ASCII plain text file to printer
        $ lpr -P Brother-HL-2270DW /etc/fstab


        # Since that worked, we'll make our printer the default printer
        $ lpoptions -d Brother-HL-2270DW

        # Print to the default printer
        $ lpr /etc/bashrc


        # Set the pretty-print option, which adds the filename, date and time, and page num
        $ lpoptions -p Brother-HL-2270DW -o prettyprint=true

        # Verify that the pretty-printing is working
        $ lpr cpuHog



- Printing to a PDF File

    - First, we'll need to install the pdf printer:

        # Install cups-pdf package
        $ dnf -y install cups-pdf

        # Verify that pdf printer is installed
        $ lpstat -a


    - Now, make the Cups-PDF queue the default:

        # Make Cups-PDF the default
        $ lpoptions -d Cups-PDF

        # Verify the default (either will work)
        $ lpq
        $ lpstat -d


    - By default, Cups-PDF prints to ~/Desktop, but we'll change that:

        # Make directory for printed PDFs
        $ mkdir ~/chapter7

        # Update /etc/cups/cups-pdf.config
        Out ${HOME}/chapter7

        # Restart CUPS
        $ systemctl restart cups


    - Now, we can print a test file:

        # Print test PDF file
        $ lpr cpuHog

        # Verify that PDF was printed
        $ ll chapter7



- File Conversion Tools

    - As SysAdmins, we frequently work with ASCII plain text files and text files encoded as
        UTF-8 or UTF-16.  ASCII files can be printed directly from the command line, but they
        may not be well-formatted.  We also may need to convert MS-Word or LibreOffice format
        files to ASCII.


    - Many non-US users perform operations on UTF-8 or UTF-16 plain text files.  It's less of
        an issue with system files, which will always be encoded as ASCII.


    - A2PS

        - The 'a2ps' utility is used to convert plain text ASCII files to PostScript files
            suitable for printing.  By default, the resulting data stream (in PostScript format)
            is sent to the default printer.

            # Install a2ps
            $ dnf -y install a2ps

            # Create a PostScript file from an ASCII file
            $ cd chapter07
            $ a2ps /etc/bashrc -o bashrc.ps

            # Print the PostScript file
            $ lpr bashrc.ps


    - PS2PDF

        - The 'ps2pdf' utility converts PostScript files to PDF using Ghostscript.

            # Convert PostScript file to PDF
            $ ps2pdf bashrc.ps bashrc-2.pdf


    - PR

        - The 'pr' utility converts plain text ASCII files into something a little prettier
            for printing.

            # Modifies file with nicer formatting
            $ pr /etc/bashrc | less

            # Add a left margin
            $ pr -o 4 /etc/bashrc


    - PS2ASCII

        - The 'ps2ascii' is a Ghostscript translator that can extract ASCII text from 
            PostScript or PDF files.

            # Extract ASCII from PostScript
            $ ps2ascii bashrc.ps



- Operating System-Related Conversion Tools

    - UNIX2DOS
    - DOS2UNIX
    - UNIX2MAC and MAC2UNIX


- Miscellaneous Tools

    - lpmove
    - wvText and odt2txt